buildscript {
    ext {
        springBootVersion = '3.2.2'
        spotlessPluginVersion = '6.25.0'
        liquibasePluginVersion = '2.2.1'
        spotbugsPluginVersion = '6.0.7'
    }
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotlessPluginVersion"
        classpath "org.liquibase:liquibase-gradle-plugin:$liquibasePluginVersion"
        classpath "com.github.spotbugs.snom:spotbugs-gradle-plugin:$spotbugsPluginVersion"
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.github.ben-manes.versions' version '0.49.0'
    id 'org.unbroken-dome.test-sets' version '4.1.0'
    id 'ru.vyarus.quality' version '4.9.0'
    id 'org.liquibase.gradle' version '2.2.1'
    id 'idea'
}

apply from: "${rootDir}/gradle/dependencies.gradle"

allprojects {
    group = 'com.reactive'
    description = 'Reactive rest api application'
    project.version = rootProject.version

    buildscript {
        repositories {
            mavenCentral()
        }
    }

    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        mavenCentral()
        mavenLocal()
    }

    task allDeps(type: DependencyReportTask) {}

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

clean.doFirst {
    delete "${rootDir}/app-build"
    println("Deleted : ${rootDir}/app-build")
    delete "${rootDir}/jacoco"
    println("Deleted : ${rootDir}/jacoco")
    delete "${rootDir}/spotbugs"
    println("Deleted : ${rootDir}/spotbugs")
}

defaultTasks "clean", "build", "assemble"

subprojects {
    task allDependencies(type: DependencyReportTask) {}

    apply from: "${rootDir}/gradle/dependencies.gradle"
    apply from: "${rootDir}/gradle/dep-manager.gradle"
    apply from: "${rootDir}/gradle/java.gradle"

    jar {
        enabled=true
    }
}

apply plugin: 'org.liquibase.gradle'

tasks.register('liquibaseSqlLocal') {
    println "Executing local"

    liquibase {
        activities {
            main {
                File propsFile = new File("${project.rootDir}/api-db/src/main/resources/liquibase.properties")
                Properties properties = new Properties()
                properties.load(new FileInputStream(propsFile))
                changeLogFile "/db/changelog/db.changelog-master.xml"
                url properties['url']
                driver properties['driver']
                username properties['username']
                password properties['password']
                classpath "${project.rootDir}/api-db/src/main/resources"
                changeLogParameters([
                        "rds_db_name": properties["parameter.rds_db_name"],
                        "rds_username": properties["parameter.rds_username"]
                ])

            }
        }
        runList = 'main'
    }
}

tasks.register('liquibaseSqlDev') {
    println "Executing dev with params"
    println "url parameter: " + url
    println "username parameter: " + username
    liquibase {
        activities {
            main {
                File propsFile = new File("${project.rootDir}/api-db/src/main/resources/liquibase.properties")
                Properties properties = new Properties()
                properties.load(new FileInputStream(propsFile))
                changeLogFile "/db/changelog/db.changelog-master.xml"
                url url
                driver properties['driver']
                username username
                password password
                classpath "${project.rootDir}/api-db/src/main/resources"
                changeLogParameters([
                        "rds_db_name": properties["parameter.rds_db_name"],
                        "rds_username": properties["parameter.rds_username"]
                ])

            }
        }
        runList = 'main'
    }
}

dependencies {
    liquibaseRuntime('info.picocli:picocli:4.7.5')
    liquibaseRuntime('org.liquibase:liquibase-core:4.26.0')
    liquibaseRuntime('org.liquibase:liquibase-groovy-dsl:3.0.3')
    liquibaseRuntime('org.postgresql:postgresql:42.7.1')
    liquibaseRuntime('org.yaml:snakeyaml:2.2')
}

