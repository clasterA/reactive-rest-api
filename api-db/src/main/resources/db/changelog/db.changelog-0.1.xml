<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">

    <changeSet id="com.reactive.rest.drop_schema_01" author="andrejs.zavjalovs">
        <sql>
            DROP SCHEMA IF EXISTS rest_api CASCADE;
        </sql>
    </changeSet>

    <changeSet id="com.reactive.rest.create_schema_01" author="andrejs.zavjalovs">
        <sql>
            GRANT ALL PRIVILEGES ON DATABASE ${rds_db_name} TO ${rds_username};
            CREATE SCHEMA IF NOT EXISTS rest_api;
            CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
        </sql>
    </changeSet>

    <changeSet id="com.reactive.rest.create_tables_01" author="andrejs.zavjalovs">
        <sql>
            DROP DOMAIN IF exists client_name;

            DROP DOMAIN IF exists account_name;

            CREATE TABLE rest_api.currency
            (
                code        varchar(3)  PRIMARY KEY,
                description varchar(255) NOT NULL,
                CONSTRAINT currency_check_length CHECK (length(code) = 3)
            );

            CREATE TABLE rest_api.exchange_rate
            (
                id            SERIAL         PRIMARY KEY,
                base_currency varchar(3)     NOT NULL,
                currency      varchar(3)     NOT NULL,
                rate          NUMERIC(10,2)  NOT NULL,
                valid_from    DATE           NOT NULL,
                created_at    timestamp      WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
                CONSTRAINT fk_exchange_rate_currency FOREIGN KEY (currency) REFERENCES rest_api.currency (code),
                CONSTRAINT fk_exchange_rate_base_currency FOREIGN KEY (base_currency) REFERENCES rest_api.currency (code)
            );

            CREATE INDEX idx_exchange_rate_valid_from ON rest_api.exchange_rate (valid_from);

            CREATE DOMAIN client_name AS varchar(255) CHECK (VALUE ~ '^[a-zA-Z]');

            CREATE TABLE rest_api.clients
            (
                id            SERIAL       PRIMARY KEY,
                guid          uuid         NOT NULL UNIQUE,
                name          client_name  NOT NULL UNIQUE,
                status        varchar(10)  NOT NULL,
                created_at    timestamp    WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
                CONSTRAINT client_check_status CHECK (status in ('Active', 'Closed'))
            );

            CREATE DOMAIN account_name AS varchar(255) CHECK (VALUE ~ '^[a-zA-Z][a-zA-Z0-9]');

            CREATE TABLE rest_api.accounts
            (
                id            SERIAL       PRIMARY KEY,
                guid          uuid         NOT NULL UNIQUE,
                client_guid   uuid         NOT NULL,
                client_name   client_name  NOT NULL,
                name          account_name NOT NULL,
                currency      varchar(3)   NOT NULL,
                created_at    timestamp    WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
                CONSTRAINT fk_accounts_currency FOREIGN KEY (currency) REFERENCES rest_api.currency (code),
                CONSTRAINT fk_accounts_client_guid FOREIGN KEY (client_guid) REFERENCES rest_api.clients (guid),
                CONSTRAINT fk_accounts_client_name FOREIGN KEY (client_name) REFERENCES rest_api.clients (name)
            );

            CREATE UNIQUE INDEX idx_accounts_client_currency ON rest_api.accounts (client_guid, currency);

            CREATE TABLE rest_api.transactions
            (
                id            SERIAL            PRIMARY KEY,
                guid          uuid              NOT NULL UNIQUE,
                acc_guid      uuid              NOT NULL,
                acc_currency  varchar(3)        NOT NULL,
                begin_amount  NUMERIC(10,2)     NOT NULL,
                trx_amount    NUMERIC(10,2)     NOT NULL,
                trx_currency  varchar(3)        NOT NULL,
                end_amount    NUMERIC(10,2)     NOT NULL,
                trx_type      varchar(6)        NOT NULL,
                created_at    timestamp         WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
                CONSTRAINT transaction_check_type CHECK (trx_type in ('Debit', 'Credit')),
                CONSTRAINT transaction_check_end_amount CHECK (end_amount >= 0),
                CONSTRAINT fk_transactions_acc_guid FOREIGN KEY (acc_guid) REFERENCES rest_api.accounts (guid),
                CONSTRAINT fk_transactions_acc_currency FOREIGN KEY (acc_currency) REFERENCES rest_api.currency (code),
                CONSTRAINT fk_transactions_trx_currency FOREIGN KEY (trx_currency) REFERENCES rest_api.currency (code)
            );

        </sql>
    </changeSet>

    <changeSet id="com.reactive.rest.fill_currency_01" author="andrejs.zavjalovs">
        <sql>
            INSERT INTO rest_api.currency
                (code, description)
            VALUES('USD', 'United States dollar');

            INSERT INTO rest_api.currency
                (code, description)
            VALUES('EUR', 'Currency of the European Union');

            INSERT INTO rest_api.currency
                (code, description)
            VALUES('GBP', 'The pound sterling (GBP) is the official currency of the United Kingdom');
        </sql>
    </changeSet>

    <changeSet id="com.reactive.rest.fill_exchange_rate_01" author="andrejs.zavjalovs">
        <sql>
            INSERT INTO rest_api.exchange_rate
                (base_currency, currency, rate, valid_from)
            VALUES('USD', 'EUR', 0.92779, '2024-02-18');

            INSERT INTO rest_api.exchange_rate
                (base_currency, currency, rate, valid_from)
            VALUES('USD', 'GBP', 0.79363, '2024-02-18');

            INSERT INTO rest_api.exchange_rate
                (base_currency, currency, rate, valid_from)
            VALUES('EUR', 'USD', 1.07783, '2024-02-18');

            INSERT INTO rest_api.exchange_rate
                (base_currency, currency, rate, valid_from)
            VALUES('EUR', 'GBP', 0.8554, '2024-02-18');

            INSERT INTO rest_api.exchange_rate
                (base_currency, currency, rate, valid_from)
            VALUES('GBP', 'USD', 1.26003, '2024-02-18');

            INSERT INTO rest_api.exchange_rate
                (base_currency, currency, rate, valid_from)
            VALUES('GBP', 'EUR', 1.16904, '2024-02-18');
        </sql>
    </changeSet>

</databaseChangeLog>
